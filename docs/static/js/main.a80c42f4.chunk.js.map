{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGriItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","Components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cast","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGriItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGRC,mBAAS,IAHD,mBAGrCC,EAHqC,KAGzBC,EAHyB,KAqB5C,OAEI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAQlB,SACI,uBACIO,KAAO,OACPC,MAAST,EACTU,SAtBe,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAQF,EAAIE,MACZV,IAAMQ,EAAIG,OAAOC,iBAAiBZ,QAVvB,kBAcRM,GAdQ,4CAAH,sDCAPO,EAAa,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGnC,OACI,sBAAKc,UAAY,0CAAjB,UACI,qBAAKC,IAAOf,EAAKgB,IAAON,IACxB,4BAAKA,QCHJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDV,SAACA,GAAc,IAAD,EAEbd,mBAAS,CAC/BqB,KAAO,GACPa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAoBnC,OAbJC,qBAAU,WACNxB,EAAQC,GACHwB,MAAM,SAAAd,GAEHY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAKtB,CAACpB,IAEOqB,EDhBuBI,CAAazB,GAAjCa,EAHqB,EAG3BN,KAAea,EAHY,EAGZA,QAGvB,OAEI,qCACA,oBAAIJ,UAAW,qCAAf,SAAqDhB,IACpDoB,GAAY,mBAAGJ,UAAW,oCAAd,wBACb,qBAAKA,UAAY,YAAjB,SAGQH,EAAOJ,KAAK,SAACC,GAET,OAAO,cAAC,EAAD,eAGCA,GADGA,EAAIC,aEjBtBe,EAAe,WAAM,IAAD,EAGOxC,mBAAS,CAAC,gBAHjB,mBAGtByC,EAHsB,KAGV1C,EAHU,KAU7B,OACI,qCAEI,8CACA,cAAC,EAAD,CAAcA,cAAiBA,IAE/B,uBAGA,6BAEQ0C,EAAWlB,KAAK,SAAAT,GAAQ,OACpB,cAAE,EAAF,CAEAA,SAAYA,GADJA,Y,MCtBhC4B,IAASC,OAEP,cAAE,EAAF,IACAC,SAASC,eAAe,W","file":"static/js/main.a80c42f4.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n\n\n    const [inputValue, setinputValue] = useState(''); \n\n    const handleInputChangue = (e) => {\n        setinputValue(e.target.value);\n        \n    }\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2){\n            setCategories( cast => [inputValue, ...cast]);\n            setinputValue('');\n        }\n\n        \n    }\n\n    return(\n        \n        <form onSubmit = {handleSubmit}>\n            <input\n                type = \"text\"\n                value = {inputValue}\n                onChange  = {handleInputChangue}\n            />\n        </form>\n        \n    )\n\n    \n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n};","\n\nexport const getGifs = async( category) => {\n            \n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=vZoRVGDRL72GB05eFWbVMk7ldiNoROBz`\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return{\n            id: img.id,\n            title:  img.title,\n            url : img.images.downsized_medium.url\n            }\n        })\n        \n        return gifs;\n    }","import React from 'react'\n\nexport const GifGriItem = ({id, title, url}) => {\n\n\n    return (\n        <div className = \"card animate__animated animate__fadeIn \">\n            <img src = {url} alt = {title} />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport {GifGriItem} from './GifGriItem';\n\n\nexport const GifGrid = ({category}) => {\n\n\n    const { data: images,  loading} = useFetchGifs(category);\n  \n\n    return (\n\n        <>\n        <h3 className =\"animate__animated animate__fadeIn \">{category}</h3>\n        {loading &&  <p className =\"animate__animated animate__flash \"> loading..</p>}\n        <div className = \"card-grid\">\n            \n            {\n                images.map( (img) => {\n\n                    return <GifGriItem  \n                        \n                        key = {img.id}\n                        {...img} />\n                    \n                })\n            }\n\n            \n        </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport {getGifs} from '../helpers/getGifs'\n\n\n export const useFetchGifs = (category) => {\n   \n    const [state, setstate] = useState({\n        data : [],\n        loading: true\n    });\n\n    useEffect(() =>{\n        getGifs(category)\n            .then( img =>{  \n                    \n                setstate({\n                    data: img, \n                    loading: false\n                });\n          \n            });\n\n    }, [category])\n\n        return state;//{data [], loading: true}\n\n}\n\n","import React, {useState} from  'react';\nimport { AddCategory } from './AddCategory'\nimport {GifGrid} from './GifGrid';\n\n\n\nexport const GifExpertApp = () =>{\n\n    \n    const [categories, setCategories] = useState(['Dragon Ball'])\n\n    // const handleAdd = () => {\n    //     //C([...categories, 'snk']);\n    //     setcategories(cast => [ ...cast, 'snk']);\n    // }\n\n    return(\n        <>\n            \n            <h2>GifExpertApp</h2>\n            <AddCategory  setCategories = {setCategories}/>\n            \n            <hr />\n\n\n            <ol>\n                {\n                    categories.map( category =>(\n                        < GifGrid \n                        key = { category}\n                        category = {category} />\n                    ))\n                \n                }\n            </ol>\n            \n        </>\n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './Components/GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n  < GifExpertApp />,  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}